// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.7.0.0
//      SpecFlow Generator Version:3.7.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace UBS.SpecFlow.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.7.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("UBS Main Page")]
    public partial class UBSMainPageFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "UBSMainPage.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "UBS Main Page", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line hidden
#line 4
 testRunner.Given("Open UBS home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify Menus <menuName> and <subMenuName>")]
        [NUnit.Framework.CategoryAttribute("Smoke_UBS_HomePage")]
        [NUnit.Framework.TestCaseAttribute("Wealth Management", "Your life goals", null)]
        [NUnit.Framework.TestCaseAttribute("Wealth Management", "Our service", null)]
        [NUnit.Framework.TestCaseAttribute("Wealth Management", "Our approach", null)]
        [NUnit.Framework.TestCaseAttribute("Wealth Management", "About us", null)]
        [NUnit.Framework.TestCaseAttribute("Wealth Management", "Sustainable Investing", null)]
        [NUnit.Framework.TestCaseAttribute("Wealth Management", "International banking", null)]
        [NUnit.Framework.TestCaseAttribute("Asset Management", "Products and capabilities", null)]
        [NUnit.Framework.TestCaseAttribute("Asset Management", "Insights", null)]
        [NUnit.Framework.TestCaseAttribute("Asset Management", "UBS ETFs (Exchange Traded Funds)", null)]
        [NUnit.Framework.TestCaseAttribute("Asset Management", "UBS Funds", null)]
        [NUnit.Framework.TestCaseAttribute("Asset Management", "About us", null)]
        [NUnit.Framework.TestCaseAttribute("Investment Bank", "What we offer", null)]
        [NUnit.Framework.TestCaseAttribute("Investment Bank", "About us", null)]
        [NUnit.Framework.TestCaseAttribute("Investment Bank", "In focus", null)]
        [NUnit.Framework.TestCaseAttribute("About us", "Our firm", null)]
        [NUnit.Framework.TestCaseAttribute("About us", "Investor Relations", null)]
        [NUnit.Framework.TestCaseAttribute("About us", "Media", null)]
        [NUnit.Framework.TestCaseAttribute("About us", "UBS in Society", null)]
        [NUnit.Framework.TestCaseAttribute("Careers", "Life at UBS", null)]
        [NUnit.Framework.TestCaseAttribute("Careers", "University students", null)]
        [NUnit.Framework.TestCaseAttribute("Careers", "Recent graduates", null)]
        [NUnit.Framework.TestCaseAttribute("Careers", "Career Comeback", null)]
        [NUnit.Framework.TestCaseAttribute("Careers", "Experienced professionals", null)]
        [NUnit.Framework.TestCaseAttribute("Careers", "Meet us", null)]
        [NUnit.Framework.TestCaseAttribute("Careers", "Search jobs", null)]
        public virtual void VerifyMenusMenuNameAndSubMenuName(string menuName, string subMenuName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Smoke_UBS_HomePage"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("menuName", menuName);
            argumentsOfScenario.Add("subMenuName", subMenuName);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Menus <menuName> and <subMenuName>", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 3
this.FeatureBackground();
#line hidden
#line 8
 testRunner.Then(string.Format("Verify if there is a menu {0} with submenu as {1}", menuName, subMenuName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify opening of <menuName> -> <subMenuName> and check if it was open")]
        [NUnit.Framework.CategoryAttribute("Smoke_UBS_HomePage")]
        [NUnit.Framework.TestCaseAttribute("Wealth Management", "Your life goals", null)]
        [NUnit.Framework.TestCaseAttribute("Wealth Management", "Our service", null)]
        [NUnit.Framework.TestCaseAttribute("Wealth Management", "International banking", null)]
        [NUnit.Framework.TestCaseAttribute("Investment Bank", "What we offer", null)]
        [NUnit.Framework.TestCaseAttribute("Investment Bank", "In focus", null)]
        [NUnit.Framework.TestCaseAttribute("About us", "Investor Relations", null)]
        [NUnit.Framework.TestCaseAttribute("About us", "UBS in Society", null)]
        [NUnit.Framework.TestCaseAttribute("Careers", "Life at UBS", null)]
        [NUnit.Framework.TestCaseAttribute("Careers", "University students", null)]
        [NUnit.Framework.TestCaseAttribute("Careers", "Recent graduates", null)]
        [NUnit.Framework.TestCaseAttribute("Careers", "Career Comeback", null)]
        [NUnit.Framework.TestCaseAttribute("Careers", "Experienced professionals", null)]
        [NUnit.Framework.TestCaseAttribute("Careers", "Search jobs", null)]
        public virtual void VerifyOpeningOfMenuName_SubMenuNameAndCheckIfItWasOpen(string menuName, string subMenuName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Smoke_UBS_HomePage"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("menuName", menuName);
            argumentsOfScenario.Add("subMenuName", subMenuName);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify opening of <menuName> -> <subMenuName> and check if it was open", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 39
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 3
this.FeatureBackground();
#line hidden
#line 40
 testRunner.Then(string.Format("Verify if there is a menu {0} with submenu as {1}", menuName, subMenuName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 41
 testRunner.Then(string.Format("Open menu as {0} and submenu as {1}", menuName, subMenuName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 42
 testRunner.Then(string.Format("Verify if opened page contains any header as {0}", subMenuName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 43
 testRunner.Then("Click go back to main page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
